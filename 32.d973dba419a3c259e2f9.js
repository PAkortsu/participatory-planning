(function(){(this||window).webpackJsonp.registerAbsMids({"esri/layers/SceneLayer":623,"esri/layers/support/RangeInfo":2072})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{2072:function(e,r,t){var n,o;n=[t.dj.c(e.i),r,t(2),t(1),t(9),t(0)],void 0===(o=function(e,r,t,n,o,i){Object.defineProperty(r,"__esModule",{value:!0});var a=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.name=null,r.field=null,r.currentRangeExtent=null,r.fullRangeExtent=null,r.type="rangeInfo",r}return t(r,e),n([i.property({type:String,json:{read:!0,write:!0}})],r.prototype,"name",void 0),n([i.property({type:String,json:{read:!0,write:!0}})],r.prototype,"field",void 0),n([i.property({type:[Number],json:{read:!0,write:!0}})],r.prototype,"currentRangeExtent",void 0),n([i.property({type:[Number],json:{read:!0,write:!0}})],r.prototype,"fullRangeExtent",void 0),n([i.property({type:String,readOnly:!0,json:{read:!1,write:!0}})],r.prototype,"type",void 0),n([i.subclass("esri.layers.support.RangeInfo")],r)}(i.declared(o));r.RangeInfo=a,r.default=a}.apply(null,n))||(e.exports=o)},623:function(e,r,t){var n,o;n=[t.dj.c(e.i),r,t(11),t(2),t(1),t(361),t(556),t(50),t(13),t(10),t(8),t(33),t(21),t(0),t(142),t(87),t(365),t(105),t(578),t(155),t(155),t(1678),t(1759),t(357),t(128),t(374),t(1761),t(2072),t(161),t(368),t(1609),t(1610),t(356)],void 0===(o=function(e,r,n,o,i,a,s,p,l,u,d,c,y,f,h,v,g,m,I,b,w,F,S,L,j,_,E,A,O,T,R,P,x){function D(e,r,t){return e&&((e=T.read(e,r,t)||void 0)||q.error("Failed to create renderer",{rendererDefinition:e,layer:this,context:t})),e}var U=["3DObject","Point"],q=u.getLogger("esri.layers.SceneLayer"),M=function(e){function r(r,t){var n=e.call(this)||this;return n.featureReduction=null,n.rangeInfos=null,n.operationalLayerType="ArcGISSceneServiceLayer",n.type="scene",n.fields=[],n.definitionExpression=null,n.path=null,n.labelsVisible=!0,n.labelingInfo=null,n.legendEnabled=!0,n.cachedDrawingInfo={color:!1},n.popupEnabled=!0,n.popupTemplate=null,n.objectIdField=null,n.objectIdFilter=null,n._fieldUsageInfo={},n.screenSizePerspectiveEnabled=!0,n}return o(r,e),r.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?n({url:e},r):e},r.prototype.getField=function(e){return j.getField(this.fields,e)},Object.defineProperty(r.prototype,"elevationInfo",{set:function(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"geometryType",{get:function(){return C[this.profile]||"mesh"},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"renderer",{set:function(e){j.fixRendererFields(e,this.fields),this._set("renderer",e)},enumerable:!0,configurable:!0}),r.prototype.readCachedDrawingInfo=function(e,r){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e},Object.defineProperty(r.prototype,"defaultPopupTemplate",{get:function(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null},enumerable:!0,configurable:!0}),r.prototype.readObjectIdField=function(e,r){return!e&&r.fields&&r.fields.some(function(r){return"esriFieldTypeOID"===r.type&&(e=r.name),!!e}),e||void 0},r.prototype.readProfile=function(e,r){var t=r.store.profile;return null!=t&&Q[t]?Q[t]:(q.error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")},r.prototype.load=function(){var e=this,r=this.loadFromPortal({supportedTypes:["Scene Service"]}).then(function(){return e._fetchService()},function(){return e._fetchService()}).then(function(){return d.all([e._verifyRootNodeAndUpdateExtent(),e._setAssociatedFeatureLayer()])}).then(function(){return e._validateElevationInfo()}).then(function(){return e._applyAssociatedLayerOverrides()}).then(function(){return e._populateFieldUsageInfo()}).then(function(){return R.loadStyleRenderer(e,{origin:"service"})}).then(function(){return j.fixRendererFields(e.renderer,e.fields)});return this.addResolvingPromise(r),this.when()},r.prototype.createLayerView=function(e){var r=this;return(null==this.profile||"mesh-pyramids"===this.profile?d.create(function(e){return Promise.all([t.e(0),t.e(3),t.e(10),t.e(12),t.e(60)]).then(function(){var r=[t(2246)];e.apply(null,r)}.bind(this)).catch(t.oe)}):d.create(function(e){return Promise.all([t.e(0),t.e(1),t.e(3),t.e(4),t.e(42)]).then(function(){var r=[t(2247)];e.apply(null,r)}.bind(this)).catch(t.oe)})).then(function(t){return new t({view:e,layer:r})})},r.prototype.createQuery=function(){var e=new x;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e},r.prototype.queryExtent=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryExtent(e||r.createQuery())})},r.prototype.queryFeatureCount=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatureCount(e||r.createQuery())})},r.prototype.queryFeatures=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatures(e||r.createQuery())}).then(function(e){if(e&&e.features)for(var t=0,n=e.features;t<n.length;t++){var o=n[t];o.layer=r,o.sourceLayer=r}return e})},r.prototype.queryObjectIds=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryObjectIds(e||r.createQuery())})},r.prototype.getFieldUsageInfo=function(e){var r={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||r:(q.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),r)},r.prototype.createPopupTemplate=function(e){return P.createPopupTemplate(this,e)},r.prototype._getAssociatedLayerForQuery=function(){var e=this;if(!this.loaded)return this.load().then(function(){return e._getAssociatedLayerForQuery()});var r=this.associatedLayer;return null!=r?d.resolve(r):d.reject(new l("scenelayer:query-not-available","SceneLayer queries are not available without associated feature layer"))},r.prototype.hasCachedStatistics=function(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(function(r){return r.name===e})},r.prototype.queryCachedStatistics=function(e){if(!this.hasCachedStatistics(e))return d.reject(new l("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available"));for(var r=0,t=this.statisticsInfo;r<t.length;r++){var n=t[r];if(n.name===e){var o=c.join(this.parsedUrl.path,n.href);return p(o,{query:{f:"json"},responseType:"json"}).then(function(e){return e.data})}}},r.prototype._validateLayer=function(e){if(e.layerType&&-1===U.indexOf(e.layerType))throw new l("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,r){var t=!1,n=!1;if(null==e)t=!0,n=!0;else{var o=r&&r.isGeographic;switch(e){case"east-north-up":case"earth-centered":t=!0,n=o;break;case"vertex-reference-frame":t=!0,n=!o;break;default:t=!1}}if(!t)throw new l("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!n)throw new l("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)},r.prototype._populateFieldUsageInfo=function(){if(this._fieldUsageInfo={},this.fields)for(var e=this,r=0,t=this.fields;r<t.length;r++){!function(r){var t=!(!e.attributeStorageInfo||!e.attributeStorageInfo.some(function(e){return e.name===r.name})),n=!!(e.associatedLayer&&e.associatedLayer.fields&&e.associatedLayer.fields.some(function(e){return e&&r.name===e.name})),o={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||n,supportsLayerQuery:n};e._fieldUsageInfo[r.name]=o}(t[r])}},r.prototype._applyAssociatedLayerOverrides=function(){if(this.associatedLayer){if(this.associatedLayer.fields)for(var e=0,r=this.associatedLayer.fields;e<r.length;e++){var t=r[e];this.getField(t.name)||this.fields.push(t.clone())}for(var n=["popupTemplate","popupEnabled"],o=v.getProperties(this),i=0;i<n.length;i++){var a=n[i];this._buddyIsMoreImportant(a)&&(o.setDefaultOrigin(this.associatedLayer.originOf(a)),o.set(a,this.associatedLayer[a]),o.setDefaultOrigin("user"))}}},r.prototype._setAssociatedFeatureLayer=function(){var e=this;return this._fetchAssociatedFeatureLayer().then(function(r){e.associatedLayer=r})},r.prototype._fetchAssociatedFeatureLayer=function(){var e=this;return-1===["mesh-pyramids","points"].indexOf(this.profile)?d.resolve(null):(this.portalItem&&this.portalItem.isResolved()?this._fetchAssociatedFeatureLayerFromRelatedItems(this.portalItem):this._fetchAssociatedFeatureLayerFromUrl()).then(function(e){return e.load()}).catch(function(r){return y.whenValidOnce(e,["popupTemplate","popupEnabled"],function(){return e.popupEnabled&&null!=e.popupTemplate}).then(function(){return function(){var r="this SceneLayer: "+e.title;null==e.attributeStorageInfo?q.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+r):q.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+r)}}),null})},r.prototype._fetchAssociatedFeatureLayerFromRelatedItems=function(e){var r=this;return e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"}).then(function(e){var t=e.filter(function(e){return"Feature Service"===e.type})[0];return t?r._fetchAssociatedFeatureLayerFromPortalItem(new O({id:t.id,portal:t.portal})):d.reject()}).catch(function(){return r._fetchAssociatedFeatureLayerFromUrl()})},r.prototype._fetchAssociatedFeatureLayerFromPortalItem=function(e){var r=this;return e.load().then(function(e){return r._findMatchingAssociatedSublayerUrl(e.url)}).then(function(r){return d.resolve(new g({url:r,portalItem:e}))})},r.prototype._fetchAssociatedFeatureLayerFromUrl=function(){return this._findMatchingAssociatedSublayerUrl().then(function(e){return d.resolve(new g({url:e}))})},r.prototype._findMatchingAssociatedSublayerUrl=function(e){var r=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);if(!r)return d.reject();null==e&&(e=r[1]+"/FeatureServer");var t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),n={query:{f:"json"},responseType:"json"},o=r[1]+"/SceneServer",i=parseInt(r[2],10),a=p(o,n).catch(function(e){return{data:{layers:null}}}),s=p(t,n);return d.all([s,a]).then(function(e){var r=e[0],n=e[1],o=n.data&&n.data.layers,a=r.data&&r.data.layers;if(!Array.isArray(a))throw new Error("expected layers array");if(Array.isArray(o))for(var s=0;s<Math.min(o.length,a.length);s++){if(o[s].id===i)return t+"/"+a[s].id}else if(i<a.length)return t+"/"+a[i].id;throw new Error("could not find matching associated sublayer")})},r.prototype._buddyIsMoreImportant=function(e){if(!this.associatedLayer)return!1;var r=h.nameToId(this.originOf(e)),t=h.nameToId(this.associatedLayer.originOf(e));return null!=t&&t<=h.OriginId.SERVICE?null==r||r<h.OriginId.SERVICE:null!=t&&t<=h.OriginId.PORTAL_ITEM&&(null==r||r<h.OriginId.PORTAL_ITEM)},r.prototype._validateElevationInfo=function(){var e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&q.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&q.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))},i([f.shared("esri.layers.SceneLayer")],r.prototype,"declaredClass",void 0),i([f.property({types:{key:"type",base:F.default,typeMap:{selection:S.default}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],r.prototype,"featureReduction",void 0),i([f.property({type:[A.default],json:{read:!1,origins:{"web-scene":{read:{source:"layerDefinition.rangeInfos"},write:{target:"layerDefinition.rangeInfos"}}}}})],r.prototype,"rangeInfos",void 0),i([f.property({json:{read:!1}})],r.prototype,"associatedLayer",void 0),i([f.property({type:["show","hide"]})],r.prototype,"listMode",void 0),i([f.property({type:["ArcGISSceneServiceLayer"]})],r.prototype,"operationalLayerType",void 0),i([f.property({json:{read:!1},readOnly:!0})],r.prototype,"type",void 0),i([f.property({type:[L]})],r.prototype,"fields",void 0),i([f.property({readOnly:!0})],r.prototype,"attributeStorageInfo",void 0),i([f.property({readOnly:!0})],r.prototype,"statisticsInfo",void 0),i([f.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],r.prototype,"definitionExpression",void 0),i([f.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],r.prototype,"path",void 0),i([f.property(b.elevationInfo)],r.prototype,"elevationInfo",null),i([f.property({type:String,dependsOn:["profile"]})],r.prototype,"geometryType",null),i([f.property(b.labelsVisible)],r.prototype,"labelsVisible",void 0),i([f.property({type:[_],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:E.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:E.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],r.prototype,"labelingInfo",void 0),i([f.property(b.legendEnabled)],r.prototype,"legendEnabled",void 0),i([f.property({types:s.rendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:D}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:D},write:{target:"layerDefinition.drawingInfo.renderer"}},value:null})],r.prototype,"renderer",null),i([f.property({json:{read:!1}})],r.prototype,"cachedDrawingInfo",void 0),i([f.reader("service","cachedDrawingInfo")],r.prototype,"readCachedDrawingInfo",null),i([f.property(b.popupEnabled)],r.prototype,"popupEnabled",void 0),i([f.property({type:a,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],r.prototype,"popupTemplate",void 0),i([f.property({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],r.prototype,"defaultPopupTemplate",null),i([f.property({type:String,json:{read:!1}})],r.prototype,"objectIdField",void 0),i([f.reader("service","objectIdField",["objectIdField","fields"])],r.prototype,"readObjectIdField",null),i([f.property({json:{read:!1}})],r.prototype,"objectIdFilter",void 0),i([f.property({type:String,json:{read:!1}})],r.prototype,"profile",void 0),i([f.reader("service","profile",["store.profile"])],r.prototype,"readProfile",null),i([f.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],r.prototype,"normalReferenceFrame",void 0),i([f.property(w.screenSizePerspectiveEnabled)],r.prototype,"screenSizePerspectiveEnabled",void 0),i([f.subclass()],r)}(f.declared(m,I)),Q={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},C={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return M}.apply(null,n))||(e.exports=o)}}]);